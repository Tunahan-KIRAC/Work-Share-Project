// <auto-generated />
using System;
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(FeleketDbContext))]
    [Migration("20220604061842_03")]
    partial class _03
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CoreLayer.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("tblCategories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2022, 6, 4, 9, 18, 41, 763, DateTimeKind.Local).AddTicks(9601),
                            ModifiedOn = new DateTime(2022, 6, 4, 9, 18, 41, 763, DateTimeKind.Local).AddTicks(9602),
                            ModifiedUserName = "system",
                            Title = "Boya İşleri"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2022, 6, 4, 9, 18, 41, 763, DateTimeKind.Local).AddTicks(9604),
                            ModifiedOn = new DateTime(2022, 6, 4, 9, 18, 41, 763, DateTimeKind.Local).AddTicks(9605),
                            ModifiedUserName = "system",
                            Title = "Elektrik İşleri"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2022, 6, 4, 9, 18, 41, 763, DateTimeKind.Local).AddTicks(9607),
                            ModifiedOn = new DateTime(2022, 6, 4, 9, 18, 41, 763, DateTimeKind.Local).AddTicks(9608),
                            ModifiedUserName = "system",
                            Title = "Temizlik İşleri"
                        });
                });

            modelBuilder.Entity("CoreLayer.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("WorkId");

                    b.ToTable("tblComments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2022, 6, 4, 9, 18, 41, 763, DateTimeKind.Local).AddTicks(9798),
                            ModifiedOn = new DateTime(2022, 6, 4, 9, 18, 41, 763, DateTimeKind.Local).AddTicks(9796),
                            ModifiedUserName = "efenbuy",
                            OwnerId = 2,
                            Text = "ben yaparım kuzen",
                            WorkId = 1
                        });
                });

            modelBuilder.Entity("CoreLayer.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfileImageFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("tblUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2022, 6, 4, 9, 18, 41, 763, DateTimeKind.Local).AddTicks(9880),
                            Email = "tuna@gmail.com",
                            IsActive = true,
                            IsAdmin = true,
                            IsDelete = false,
                            LastName = "Kıraç",
                            ModifiedOn = new DateTime(2022, 6, 4, 9, 18, 41, 763, DateTimeKind.Local).AddTicks(9883),
                            ModifiedUserName = "system",
                            Name = "Tunahan",
                            Password = "123",
                            Score = 0,
                            UserName = "Feleket"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2022, 6, 4, 9, 18, 41, 763, DateTimeKind.Local).AddTicks(9885),
                            Email = "efe@gmail.com",
                            IsActive = true,
                            IsAdmin = false,
                            IsDelete = false,
                            LastName = "cemal",
                            ModifiedOn = new DateTime(2022, 6, 4, 9, 18, 41, 763, DateTimeKind.Local).AddTicks(9886),
                            ModifiedUserName = "system",
                            Name = "Efe",
                            Password = "123",
                            Score = 0,
                            UserName = "efenbuy"
                        });
                });

            modelBuilder.Entity("CoreLayer.Models.Work", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("OwnerId");

                    b.ToTable("tblWorks", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedOn = new DateTime(2022, 6, 4, 9, 18, 41, 763, DateTimeKind.Local).AddTicks(9948),
                            Description = "Evin bir odası boyanacak",
                            IsActive = true,
                            ModifiedOn = new DateTime(2022, 6, 4, 9, 18, 41, 763, DateTimeKind.Local).AddTicks(9954),
                            ModifiedUserName = "system",
                            OwnerId = 1,
                            Price = 250m,
                            Title = "Acil boya işi"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedOn = new DateTime(2022, 6, 4, 9, 18, 41, 763, DateTimeKind.Local).AddTicks(9955),
                            Description = "Evin elektirik tesisatına bakılacak",
                            IsActive = true,
                            ModifiedOn = new DateTime(2022, 6, 4, 9, 18, 41, 763, DateTimeKind.Local).AddTicks(9957),
                            ModifiedUserName = "system",
                            OwnerId = 1,
                            Price = 500m,
                            Title = "Acil elektirik işi"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedOn = new DateTime(2022, 6, 4, 9, 18, 41, 763, DateTimeKind.Local).AddTicks(9958),
                            Description = "Ev temizlenecek",
                            IsActive = true,
                            ModifiedOn = new DateTime(2022, 6, 4, 9, 18, 41, 763, DateTimeKind.Local).AddTicks(9959),
                            ModifiedUserName = "system",
                            OwnerId = 2,
                            Price = 75m,
                            Title = "Acil temizlik işi"
                        });
                });

            modelBuilder.Entity("CoreLayer.Models.Comment", b =>
                {
                    b.HasOne("CoreLayer.Models.User", "Owner")
                        .WithMany("Comments")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreLayer.Models.Work", "Work")
                        .WithMany("Comments")
                        .HasForeignKey("WorkId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Work");
                });

            modelBuilder.Entity("CoreLayer.Models.Work", b =>
                {
                    b.HasOne("CoreLayer.Models.Category", "Category")
                        .WithMany("Works")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreLayer.Models.User", "Owner")
                        .WithMany("Works")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("CoreLayer.Models.Category", b =>
                {
                    b.Navigation("Works");
                });

            modelBuilder.Entity("CoreLayer.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Works");
                });

            modelBuilder.Entity("CoreLayer.Models.Work", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
